{"version":3,"file":"client.cjs.production.min.js","sources":["../src/client.ts"],"sourcesContent":["import { ClientOpts as PulsarClientOpts, Client as PulsarClient, Producer as PulsarProducer} from 'pulsar-client';\nimport {AvroForEngineMessage, DispatchJobMessage, ForEngineMessage} from '@zenaton/messages';\nimport { v4 as uuid } from 'uuid';\n\nexport interface ClientOpts {\n  pulsar: {\n    client: PulsarClientOpts;\n  };\n}\n\nexport class Client {\n  private opts: ClientOpts;\n  private pulsarClient?: PulsarClient;\n  private pulsarProducer?: PulsarProducer;\n\n  constructor(opts: Partial<ClientOpts> = {}) {\n    this.opts = Object.assign(\n      {\n        pulsar: {\n          client: {},\n        },\n      },\n      opts\n    );\n  }\n\n  async dispatchTask(name: string, input: any) {\n    const jobId = uuid();\n    const message: DispatchJobMessage = {\n      jobId,\n      type: 'DispatchJob',\n      DispatchJob: {\n        jobId,\n        sentAt: Date.now(),\n        jobName: name,\n        jobData: Buffer.from(JSON.stringify(input)),\n        workflowId: null\n      },\n    };\n\n    this.dispatchForEngineMessage(message)\n  }\n\n  async dispatchForEngineMessage(message: ForEngineMessage) {\n    if (!this.pulsarClient) {\n      this.pulsarClient = new PulsarClient(this.opts.pulsar.client);\n    }\n    if (!this.pulsarProducer) {\n      this.pulsarProducer = await this.pulsarClient.createProducer({\n        topic: 'persistent://public/default/tasks-engine',\n        sendTimeoutMs: 30000,\n        batchingEnabled: false,\n      });\n    }\n    await this.pulsarProducer.send({\n      data: AvroForEngineMessage.toBuffer(message),\n    });\n  }\n}"],"names":["constructor","opts","Object","assign","pulsar","client","dispatchTask","name","input","this","jobId","uuid","message","type","DispatchJob","sentAt","Date","now","jobName","jobData","Buffer","from","JSON","stringify","workflowId","dispatchForEngineMessage","_this2","pulsarProducer","send","data","AvroForEngineMessage","toBuffer","pulsarClient","PulsarClient","createProducer","topic","sendTimeoutMs","batchingEnabled"],"mappings":"yKAeEA,YAAYC,EAA4B,SACjCA,KAAOC,OAAOC,OACjB,CACEC,OAAQ,CACNC,OAAQ,KAGZJ,GAIEK,aAAaC,EAAcC,eAc/BC,KAbMC,EAAQC,OACRC,EAA8B,CAClCF,MAAAA,EACAG,KAAM,cACNC,YAAa,CACXJ,MAAAA,EACAK,OAAQC,KAAKC,MACbC,QAASX,EACTY,QAASC,OAAOC,KAAKC,KAAKC,UAAUf,IACpCgB,WAAY,gBAIXC,yBAAyBb,wDAG1Ba,yBAAyBb,eACxBH,yCAUCiB,EAAKC,eAAeC,KAAK,CAC7BC,KAAMC,uBAAqBC,SAASnB,2BAXjCc,EAAKM,iBACHA,aAAe,IAAIC,SAAaP,EAAKzB,KAAKG,OAAOC,gCAEnDqB,EAAKC,sCACoBD,EAAKM,aAAaE,eAAe,CAC3DC,MAAO,2CACPC,cAAe,IACfC,iBAAiB,yBAHdV"}