{"code":"import { Client as PulsarClient } from 'pulsar-client';\r\nimport { AvroForEngineMessage } from '@zenaton/messages';\r\nimport { v4 as uuid } from 'uuid';\r\nexport class Client {\r\n    constructor(opts) {\r\n        this.opts = Object.assign({\r\n            pulsar: {\r\n                client: {},\r\n            },\r\n        }, opts);\r\n    }\r\n    async dispatchTask(name, input) {\r\n        if (!this.pulsarClient) {\r\n            this.pulsarClient = new PulsarClient(this.opts.pulsar.client);\r\n        }\r\n        if (!this.pulsarProducer) {\r\n            this.pulsarProducer = await this.pulsarClient.createProducer({\r\n                topic: 'persistent://public/default/tasks-engine',\r\n                sendTimeoutMs: 30000,\r\n                batchingEnabled: false,\r\n            });\r\n        }\r\n        const jobId = uuid();\r\n        const toSend = {\r\n            jobId,\r\n            type: 'DispatchJob',\r\n            DispatchJob: {\r\n                jobId,\r\n                sentAt: Date.now(),\r\n                jobName: name,\r\n                jobData: null,\r\n                workflowId: null\r\n            },\r\n        };\r\n        this.pulsarProducer.send({\r\n            data: AvroForEngineMessage.toBuffer(toSend),\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=client.js.map","references":["/Users/gilles/Sites/zenaton/node/node_modules/@types/pulsar-client/index.d.ts","/Users/gilles/Sites/zenaton/node/node_modules/@zenaton/messages/dist/index.d.ts","/Users/gilles/Sites/zenaton/node/node_modules/uuid/index.js"],"map":"{\"version\":3,\"file\":\"client.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/client.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAkC,MAAM,IAAI,YAAY,EAA6B,MAAM,eAAe,CAAC;AAClH,OAAO,EAAC,oBAAoB,EAAqB,MAAM,mBAAmB,CAAC;AAC3E,OAAO,EAAE,EAAE,IAAI,IAAI,EAAE,MAAM,MAAM,CAAC;AAQlC,MAAM,OAAO,MAAM;IAKjB,YAAY,IAAyB;QACnC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CACvB;YACE,MAAM,EAAE;gBACN,MAAM,EAAE,EAAE;aACX;SACF,EACD,IAAI,CACL,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,IAAY,EAAE,KAAU;QACzC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC/D;QACD,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,cAAc,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;gBAC3D,KAAK,EAAE,0CAA0C;gBACjD,aAAa,EAAE,KAAK;gBACpB,eAAe,EAAE,KAAK;aACvB,CAAC,CAAC;SACJ;QAED,MAAM,KAAK,GAAG,IAAI,EAAE,CAAC;QACrB,MAAM,MAAM,GAAuB;YACjC,KAAK;YACL,IAAI,EAAE,aAAa;YACnB,WAAW,EAAE;gBACX,KAAK;gBACL,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE;gBAClB,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,IAAI;gBACb,UAAU,EAAE,IAAI;aACjB;SACF,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACvB,IAAI,EAAE,oBAAoB,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;CACF\"}","dts":{"name":"/Users/gilles/Sites/zenaton/node/packages/zenaton-client/client.d.ts","writeByteOrderMark":false,"text":"import { ClientOpts as PulsarClientOpts } from 'pulsar-client';\r\nexport interface ClientOpts {\r\n    pulsar: {\r\n        client: PulsarClientOpts;\r\n    };\r\n}\r\nexport declare class Client {\r\n    private opts;\r\n    private pulsarClient?;\r\n    private pulsarProducer?;\r\n    constructor(opts: Partial<ClientOpts>);\r\n    dispatchTask(name: string, input: any): Promise<void>;\r\n}\r\n"}}
